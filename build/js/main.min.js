/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_init_phone_mask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/init-phone-mask */ "./js/modules/init-phone-mask.js");
/* harmony import */ var _modules_init_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/init-map */ "./js/modules/init-map.js");
/* harmony import */ var _modules_init_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/init-form */ "./js/modules/init-form.js");



var body = document.querySelector('body');

var formatNumber = function formatNumber(number) {
  return new Intl.NumberFormat('ru-RU').format(number);
};

var initMenu = function initMenu() {
  var menu = document.querySelector('.nav');

  if (!menu) {
    return;
  }

  if (menu.classList.contains('is-open')) {
    menu.classList.remove('is-open');
    body.classList.remove('scroll-lock');
  } else {
    menu.classList.add('is-open');
    body.classList.add('scroll-lock');
  }
};

var initTitle = function initTitle() {
  var title = document.querySelector('[data-title]');
  var products = document.querySelectorAll('.card:not(.is-deleted)');
  var amount = 0;
  var count = 0;
  var countTitle = '';
  products.forEach(function (el) {
    amount += Number(el.querySelector('[data-result]').textContent.replace(/\s/g, ''));
    count += Number(el.querySelector('[data-amount]').value);

    if (count % 10 === 1) {
      countTitle = "".concat(count, " \u0442\u043E\u0432\u0430\u0440");
    } else if (count % 10 >= 2 && count % 10 <= 4 && (count % 100 < 10 || count % 100 >= 20)) {
      countTitle = "".concat(count, " \u0442\u043E\u0432\u0430\u0440\u0430");
    } else {
      countTitle = "".concat(count, " \u0442\u043E\u0432\u0430\u0440\u043E\u0432");
    }
  });
  title.textContent = "".concat(countTitle, " \u043D\u0430 \u0441\u0443\u043C\u043C\u0443 ").concat(formatNumber(amount));
};

var initPrice = function initPrice(block) {
  var price = block.querySelector('[data-price]');
  var priceOld = block.querySelector('[data-price-old');
  var amount = block.querySelector('[data-amount]');
  block.querySelector('[data-result]').textContent = formatNumber(Number(price.textContent.replace(/\s/g, '')) * Number(amount.value));

  if (priceOld) {
    block.querySelector('[data-result-old]').textContent = formatNumber(Number(priceOld.textContent.replace(/\s/g, '')) * Number(amount.value));
  }
};

var initQuantity = function initQuantity(evt) {
  var priceBlock = evt.target.closest('[data-price-block]');
  var amount = priceBlock.querySelector('[data-amount]');

  if (evt.target.closest('[data-plus]') && amount.value < amount.max) {
    amount.value = Number(amount.value) + 1;
    initPrice(priceBlock);
  }

  if (evt.target.closest('[data-minus]') && amount.value > amount.min) {
    amount.value = Number(amount.value) - 1;
    initPrice(priceBlock);
  }
};

var deleteCard = function deleteCard(evt) {
  var card = evt.target.closest('.card');
  card.classList.add('is-deleted');
};

var restoreCard = function restoreCard(evt) {
  var card = evt.target.closest('.card');
  card.classList.remove('is-deleted');
  initTitle();
};

var deleteItem = function deleteItem(evt) {
  var item = evt.target.closest('.order__item');
  item.remove();
};

var initComment = function initComment() {
  var comment = document.querySelector('[data-comment');
  var textarea = comment.querySelector('textarea');
  var message = comment.querySelector('.textarea__message');
  message.textContent = "\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u043E ".concat(textarea.value.length, "/").concat(textarea.maxLength, " \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432");
};

document.addEventListener('DOMContentLoaded', function () {
  Object(_modules_init_map__WEBPACK_IMPORTED_MODULE_1__["initMap"])();
  initTitle();
  initComment();
  Object(_modules_init_phone_mask__WEBPACK_IMPORTED_MODULE_0__["initPhoneMask"])();
  Object(_modules_init_form__WEBPACK_IMPORTED_MODULE_2__["initForm"])();
  document.addEventListener('click', function (evt) {
    if (evt.target.closest('[data-burger')) {
      initMenu();
    }

    if (evt.target.closest('[data-plus]') || evt.target.closest('[data-minus]')) {
      initQuantity(evt);
      initTitle();
    }

    if (evt.target.closest('[data-delete-card]')) {
      deleteCard(evt);
      initTitle();
    }

    if (evt.target.closest('[data-restore-card]')) {
      restoreCard(evt);
    }

    if (evt.target.closest('[data-close]')) {
      deleteItem(evt);
    }
  });
  document.addEventListener('input', function (evt) {
    if (evt.target.closest('#comment')) {
      initComment();
    }
  });
});

/***/ }),

/***/ "./js/modules/init-form.js":
/*!*********************************!*\
  !*** ./js/modules/init-form.js ***!
  \*********************************/
/*! exports provided: initForm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initForm", function() { return initForm; });
var form = document.querySelector('form');
var modal = document.querySelector('.modal');
var body = document.querySelector('body');

var initModal = function initModal() {
  if (!modal) {
    return;
  }

  var closeModal = function closeModal() {
    modal.classList.remove('is-active');
    body.classList.remove('scroll-lock');
  };

  modal.classList.add('is-active');
  body.classList.add('scroll-lock');
  document.addEventListener('click', function (evt) {
    if (evt.target.closest('.modal__close')) {
      closeModal();
    }

    if (evt.target.closest('.modal') && !evt.target.closest('.modal__content')) {
      closeModal();
    }
  });
  document.addEventListener('keydown', function (evt) {
    if (evt.key === 'Escape' || evt.key === 'Esc') {
      evt.preventDefault();
      closeModal();
    }
  });
};

var initForm = function initForm() {
  if (!form) {
    return;
  }

  var btnSubmit = form.querySelector('[type=submit]');
  form.addEventListener('submit', function (evt) {
    evt.preventDefault();
    fetch('https://echo.htmlacademy.ru', {
      method: 'POST',
      body: new FormData(form)
    }).then(function (response) {
      if (response.ok) {
        initModal();
        form.reset();
        btnSubmit.blur();
      }
    });
  });
};



/***/ }),

/***/ "./js/modules/init-map.js":
/*!********************************!*\
  !*** ./js/modules/init-map.js ***!
  \********************************/
/*! exports provided: initMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMap", function() { return initMap; });
var address = document.getElementById('address');
var searchBtn = document.getElementById('search');
var searchData;
var urlAddress = 'https://cleaner.dadata.ru/api/v1/clean/address';
var urlSuggestions = 'http://suggestions.dadata.ru/suggestions/api/4_1/rs/geolocate/address';
var token = '737185198c92ad17e79e8ae65f3ab0d1a68d598d';
var secret = '49d9b496910a96d5bb0d07f0e273195db8532b47';

var getAddress = function getAddress(query) {
  fetch(urlAddress, {
    method: 'POST',
    mode: 'cors',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Token ' + token,
      'X-Secret': secret
    },
    body: JSON.stringify([query])
  }).then(function (res) {
    return res.json();
  }).then(function (data) {
    searchData = data[0];
    console.log(data);
  });
};

var getCoords = function getCoords(query) {
  fetch(urlSuggestions, {
    method: 'POST',
    mode: 'cors',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json',
      'Authorization': 'Token ' + token
    },
    body: JSON.stringify(query)
  }).then(function (res) {
    return res.json();
  }).then(function (data) {
    address.value = data.suggestions[0].value;
  });
};
/* eslint-disable no-undef */


var initMap = function initMap() {
  var mapEl = document.querySelector('#map');

  if (typeof ymaps !== 'undefined' && mapEl) {
    ymaps.ready(function () {
      var myMap = new ymaps.Map(map, {
        center: [55.76, 37.64],
        zoom: 15,
        controls: []
      });
      var myPlacemark = new ymaps.Placemark([55.76, 37.64], null, {
        iconLayout: 'default#image',
        iconImageHref: './img/svg/pin.svg',
        iconImageSize: [28, 40],
        iconImageOffset: [-14, -40]
      });
      myMap.geoObjects.add(myPlacemark);
      myMap.events.add('click', function (e) {
        myPlacemark.geometry.setCoordinates(e.get('coords'));
        myMap.geoObjects.add(myPlacemark);
        getCoords({
          lat: e.get('coords')[0],
          lon: e.get('coords')[1]
        });
      });
      searchBtn.addEventListener('click', function (e) {
        e.preventDefault();
        getAddress(address.value);
        address.value = searchData.result;
        myPlacemark.geometry.setCoordinates({
          lat: searchData.geo_lat,
          lon: searchData.geo_lon
        });
        myMap.geoObjects.add(myPlacemark);
      });
    });
  }
};



/***/ }),

/***/ "./js/modules/init-phone-mask.js":
/*!***************************************!*\
  !*** ./js/modules/init-phone-mask.js ***!
  \***************************************/
/*! exports provided: initPhoneMask */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPhoneMask", function() { return initPhoneMask; });
var phone = document.querySelector('[type=tel]');

var initPhoneMask = function initPhoneMask() {
  if (!phone) {
    return;
  }

  phone.addEventListener('keypress', function (evt) {
    if (evt.keyCode < 47 || evt.keyCode > 57) {
      evt.preventDefault();
    }

    if (phone.value.length === 0) {
      phone.value = '+7 (';
      phone.selectionStart = phone.value.length;
    }

    if (phone.value.length === 7) {
      phone.value += ') ';
    }
  });
  phone.addEventListener('click', function (evt) {
    if (phone.selectionStart < 4) {
      phone.selectionStart = phone.value.length;
    }

    if (evt.key === 'Backspace' && phone.value.length <= 4) {
      evt.preventDefault();
    }
  });
  phone.addEventListener('blur', function () {
    if (phone.value === '+7(') {
      phone.value = '';
    }
  });
  phone.addEventListener('keydown', function (evt) {
    if (evt.key === 'Backspace' && phone.value.length <= 4) {
      evt.preventDefault();
    }

    if (evt.key === 'ArrowLeft' && phone.value.length <= 4) {
      evt.preventDefault();
    }
  });
};



/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map